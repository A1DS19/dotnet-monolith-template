services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: dmt-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - dmt-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -C -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: dmt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dmt-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "YourRedisPassword123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --requirepass "YourRedisPassword123"

  seq:
    image: datalust/seq:2024.1
    container_name: dmt-seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINUSERNAME=admin
      - SEQ_FIRSTRUN_ADMINPASSWORD=Admin123!
    ports:
      - "5341:80"
      - "5342:5341"
    volumes:
      - seq_data:/data
    networks:
      - dmt-network
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
    #   interval: 30s
    #   timeout: 15s
    #   retries: 10
    #   start_period: 60s

  # API with Development Volumes
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: dmt-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:9090
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=DMT;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - ConnectionStrings__Redis=dmt-redis:6379,password=YourRedisPassword123,defaultDatabase=1
      - Serilog__WriteTo__2__Args__serverUrl=http://seq:80
      - Serilog__WriteTo__2__Args__apiKey=
      - ApiSettings__AllowedOrigins__0=http://localhost:3000
      - ApiSettings__AllowedOrigins__1=https://localhost:3000
    ports:
      - "9090:9090"
    volumes:
      # Source code volumes for hot reload
      - ./scripts/:scripts:cached
      - ./DMT.Api:/src/DMT.Api:cached
      - ./DMT.Application:/src/DMT.Application:cached
      - ./DMT.Domain:/src/DMT.Domain:cached
      - ./DMT.Infraestructure:/src/DMT.Infraestructure:cached
      - ./DMT.Api/appsettings.json:/src/DMT.Api/appsettings.json:cached
      - ./DMT.Api/appsettings.Development.json:/src/DMT.Api/appsettings.Development.json:cached
      # Persistent logs
      - api_logs:/src/DMT.Api/logs
      # Exclude build artifacts
      - /src/DMT.Api/bin
      - /src/DMT.Api/obj
    networks:
      - dmt-network
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
      seq:
        condition: service_started
    restart: unless-stopped

networks:
  dmt-network:
    driver: bridge

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local
  seq_data:
    driver: local
  api_logs:
    driver: local
